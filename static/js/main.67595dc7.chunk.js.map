{"version":3,"sources":["components/Profile/index.js","components/Repository/index.js","components/Repositories/index.js","components/App/index.js","scripts/reportWebVitals.js","index.js"],"names":["Profile","props","console","log","login","avatar_url","id","node_id","html_url","gravatar_id","url","company","followers_url","following_url","gists_url","name","starred_url","subscriptions_url","organizations_url","repos_url","events_url","received_events_url","type","site_admin","location","bio","handleBackClick","hireable","email","style","backgroundImage","className","href","icon","faAt","faPaperclip","faUsers","faMapMarkedAlt","onClick","Repository","description","language","stargazers_count","forks","handleRepositoryClick","fork","_private","private","data-url","data-is-fork","faCodeBranch","faUserSecret","faCode","faStar","Repositories","repositories","JSON","parse","length","map","repository","App","state","gists","localStorage","getItem","KEY_GISTS_CACHE","profile","KEY_PROFILE_CACHE","KEY_REPOSITORIES_CACHE","repositoriesVisibility","KEY_REPOSITORIES_VISIBILITY_CACHE","updateProfile","bind","handleSubmit","handleRepositoriesVisibilityClick","document","addEventListener","handleDocumentKeypress","removeEventListener","this","action","placeholder","htmlFor","role","faArrowCircleRight","aria-labelledby","data-name","data-value","event","preventDefault","isEnableSubmitInFormGithubProfile","disableSubmitInFormGithubProfile","username","forms","elements","value","handleErrorInvalidUsername","enableSubmitInFormGithubProfile","setLoadingMessage","endpoint","fetch","then","response","json","message","handleErrorUnknownUser","removeClassHasErrorForFormGithubProfile","replace","updateRepositories","updateGists","showPortfolioSection","catch","reason","error","finally","target","classList","contains","closest","dataset","window","currentActivebutton","querySelector","remove","add","updateRepositoriesVisibility","toggleRepositoriesVisibility","setItem","stringify","setState","portfolioSection","scroll","top","clickOnRepositoriesVisibilityAll","mainSection","keyCode","showMainSection","querySelectorAll","isFork","addClassHasErrorForFormGithubProfile","formGithubProfile","setTimeout","setAttribute","removeAttribute","hasAttribute","innerHTML","click","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.67595dc7.chunk.js","sourcesContent":["import './index.css'\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faUsers, faMapMarkedAlt, faPaperclip, faAt} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport React from \"react\";\r\n\r\nfunction Profile(props) {\r\n\r\n    console.log('Profile', {props})\r\n\r\n    const {\r\n        login, id, node_id, avatar_url, gravatar_id, url, html_url, followers_url, following_url, gists_url, company,\r\n        starred_url, subscriptions_url, organizations_url, repos_url, events_url, received_events_url, type, site_admin,\r\n        name, location, bio, handleBackClick, hireable, email\r\n    } = props\r\n\r\n    const style = {\r\n        backgroundImage: `url(${avatar_url})`\r\n    }\r\n\r\n    return (\r\n        <article className=\"Profile\">\r\n            <div className=\"avatar\" style={style}></div>\r\n            <div className=\"Profile-description\">\r\n                {name ? <div className=\"username\">{name}</div> : null}\r\n                {login ? <a href={html_url}><div className=\"login\">@{login}</div></a> : null}\r\n                {bio ? <div className=\"bio\">{bio}</div> : null}\r\n            </div>\r\n            <div className=\"Profile-status\">\r\n                {email && <div className=\"email\"><FontAwesomeIcon icon={faAt}/>&nbsp;{email}</div>}\r\n                {hireable && <div className=\"hireable\"><FontAwesomeIcon icon={faPaperclip}/>&nbsp;En recherche d'emploi</div>}\r\n                {company ? <div className=\"company\"><FontAwesomeIcon icon={faUsers}/>&nbsp;{company}</div> : null}\r\n                {location ? <div className=\"location\"><FontAwesomeIcon icon={faMapMarkedAlt}/>&nbsp;{location}</div> : null}\r\n            </div>\r\n            <div className=\"Profile-links\">\r\n                <a href=\"#\" className=\"active\">Repositories</a>\r\n            </div>\r\n            <div className=\"Profile-footer\">\r\n                <button onClick={handleBackClick}>Back</button>\r\n            </div>\r\n        </article>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile\r\n","import './index.css'\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faCode, faStar, faCodeBranch, faUserSecret} from '@fortawesome/free-solid-svg-icons'\r\nimport React from \"react\";\r\n\r\n\r\nfunction Repository (props) {\r\n\r\n    let {\r\n        name, description, language, stargazers_count, forks, html_url, handleRepositoryClick, fork, private: _private\r\n    } = props\r\n\r\n    return (\r\n        <article className=\"Repository\" data-url={html_url} onClick={handleRepositoryClick} data-is-fork={fork}>\r\n            <div className=\"Repository-labels\">\r\n                {\r\n                    fork ? <span className=\"Repository-labels-fork\"><FontAwesomeIcon icon={faCodeBranch}/>&nbsp;Fork</span> : null\r\n                }\r\n                {\r\n                    _private ? <span className=\"Repository-labels-private\"><FontAwesomeIcon icon={faUserSecret}/>&nbsp;Private</span> : null\r\n                }\r\n            </div>\r\n            <span className=\"Repository-name\">{name}</span>\r\n            <span className=\"Repository-description\">{description}</span>\r\n            <div className=\"Repository-infos\">\r\n                <span className=\"Repository-infos-language\"><FontAwesomeIcon icon={faCode}/>&nbsp;{language}</span>\r\n                <span className=\"Repository-infos-stars\"><FontAwesomeIcon icon={faStar}/>&nbsp;{stargazers_count}</span>\r\n                <span className=\"Repository-infos-stars\"><FontAwesomeIcon icon={faCodeBranch}/>&nbsp;{forks}</span>\r\n            </div>\r\n        </article>\r\n    )\r\n\r\n}\r\n\r\nexport default Repository\r\n","import './index.css'\r\nimport React from \"react\";\r\nimport Repository from \"../Repository\";\r\n\r\nfunction Repositories(props) {\r\n\r\n    let {repositories, handleRepositoryClick} = props\r\n    if ('string' === typeof repositories) repositories = JSON.parse(repositories)\r\n\r\n    return (\r\n        <section className=\"Repositories\">\r\n            {\r\n                0 < repositories.length ? repositories.map(repository => (\r\n                    <Repository key={repository.id} {...repository} handleRepositoryClick={handleRepositoryClick}/>\r\n                )) : (\r\n                    <article>No repository found</article>\r\n                )\r\n            }\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default Repositories\r\n","import './index.css';\n\nimport React from \"react\";\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faArrowCircleRight} from '@fortawesome/free-solid-svg-icons'\n\nimport Profile from \"../Profile\";\nimport Repositories from \"../Repositories\";\n\nclass App extends React.Component {\n\n    static KEY_GISTS_CACHE = 'github_portfolio_gists_cache'\n    static KEY_PROFILE_CACHE = 'github_portfolio_profile_cache'\n    static KEY_REPOSITORIES_CACHE = 'github_portfolio_repositories_cache'\n    static KEY_REPOSITORIES_VISIBILITY_CACHE = 'github_portfolio_repositories_visibility_cache'\n\n    state = {\n        gists: localStorage.getItem(App.KEY_GISTS_CACHE),\n        profile: localStorage.getItem(App.KEY_PROFILE_CACHE),\n        repositories: localStorage.getItem(App.KEY_REPOSITORIES_CACHE),\n        repositoriesVisibility: localStorage.getItem(App.KEY_REPOSITORIES_VISIBILITY_CACHE)\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.updateProfile = this.updateProfile.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleRepositoryClick = this.handleRepositoryClick.bind(this)\n        this.handleRepositoriesVisibilityClick = this.handleRepositoriesVisibilityClick.bind(this)\n    }\n\n\n    componentDidMount() {\n        document.addEventListener('keydown', App.handleDocumentKeypress, false)\n    }\n\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', App.handleDocumentKeypress, false)\n    }\n\n\n    render() {\n\n        const {profile, repositories} = this.state\n\n        return (\n            <div className=\"App\">\n                <section className=\"App-section\">\n                    <section className=\"App-section-main show\">\n                        <div className=\"container\">\n                            <h1>Select a github profile<br/>to generate a portfolio</h1>\n                            <form action=\"#\" name=\"github-profile\">\n                                <div className=\"form-group\">\n                                    <input type=\"text\" name=\"username\" id=\"username\" placeholder=\" \"/>\n                                    <label htmlFor=\"username\">Pseudo Github</label>\n                                </div>\n                                <button role=\"button\" type=\"submit\" name=\"submit_github_profile\"\n                                        onClick={this.handleSubmit}>\n                                    <FontAwesomeIcon icon={faArrowCircleRight}/>\n                                </button>\n                                <aside className=\"error-helper-wrapper\">\n                                    <small className=\"error-helper\" aria-labelledby=\"unknown-user\">Unknown user</small>\n                                    <small className=\"error-helper\" aria-labelledby=\"invalid-username\">Invalid\n                                        username</small>\n                                </aside>\n                            </form>\n                            <div className=\"App-section-main-loading-wrapper\"></div>\n                        </div>\n                    </section>\n                    <section className=\"App-section-portfolio hide\">\n                        <aside className=\"App-section-portfolio-profile\">\n                            <Profile {...profile} handleBackClick={App.handleBackClick}/>\n                        </aside>\n                        <section className=\"App-section-portfolio-repositories\">\n                            <header className=\"App-section-portfolio-repositories-header\">\n                                <h2>Repositories</h2>\n                                <div className=\"App-section-portfolio-repositories-actions\">\n                                    <div className=\"list-button\" data-name=\"repositories-visibility\">\n                                        <button className=\"active\" data-value=\"all\"\n                                                onClick={this.handleRepositoriesVisibilityClick}>All\n                                        </button>\n                                        <button data-value=\"owns\"\n                                                onClick={this.handleRepositoriesVisibilityClick}>Owns\n                                        </button>\n                                        <button data-value=\"forks\"\n                                                onClick={this.handleRepositoriesVisibilityClick}>Forks\n                                        </button>\n                                    </div>\n                                </div>\n                            </header>\n                            <Repositories\n                                repositories={repositories}\n                                handleRepositoryClick={this.handleRepositoryClick} />\n                        </section>\n                    </section>\n                </section>\n            </div>\n        )\n    }\n\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        if (false === App.isEnableSubmitInFormGithubProfile()) return\n\n        App.disableSubmitInFormGithubProfile()\n\n        const formGithubProfile = document.forms['github-profile']\n        const username = formGithubProfile.elements.username.value\n\n        if (!username) {\n            App.handleErrorInvalidUsername()\n            App.enableSubmitInFormGithubProfile()\n            return\n        }\n\n        App.setLoadingMessage('Retrieving github profile')\n\n        const endpoint = `https://api.github.com/users/${username}`\n        fetch(endpoint)\n            .then(response => response.json())\n            .then(profile => {\n                const {message} = profile\n\n                if (!!message && 'Not Found' === message) {\n                    App.handleErrorUnknownUser()\n                    App.setLoadingMessage('')\n                    App.enableSubmitInFormGithubProfile()\n                    return\n                }\n\n                App.removeClassHasErrorForFormGithubProfile()\n\n                this.updateProfile(profile)\n                let {repos_url, gists_url} = profile\n\n                gists_url = gists_url.replace('{/gist_id}', '')\n\n                App.setLoadingMessage('Retrieving repositories')\n\n                fetch(repos_url)\n                    .then(response => response.json())\n                    .then(repositories => {\n                        this.updateRepositories(repositories)\n\n                        App.setLoadingMessage('Retrieving gists')\n\n                        fetch(gists_url)\n                            .then(response => response.json())\n                            .then(gists => {\n                                this.updateGists(gists)\n\n                                App.setLoadingMessage('')\n                                App.enableSubmitInFormGithubProfile()\n\n                                App.showPortfolioSection()\n                            })\n                            .catch(reason => {\n                                console.error(reason)\n                                App.setLoadingMessage('')\n                                App.enableSubmitInFormGithubProfile()\n                            })\n\n                    })\n                    .catch(reason => {\n                        console.error(reason)\n                        App.setLoadingMessage('')\n                        App.enableSubmitInFormGithubProfile()\n                    })\n            })\n            .catch(reason => {\n                console.error(reason)\n                App.setLoadingMessage('')\n                App.enableSubmitInFormGithubProfile()\n            })\n            .finally(() => {})\n    }\n\n\n    handleRepositoryClick(event) {\n        event.preventDefault()\n\n        let {target} = event\n\n        if (!target.classList.contains('Repository')) {\n            target = target.closest('.Repository')\n        }\n\n        const {url} = target.dataset\n\n        window.location.href = url\n    }\n\n\n    handleRepositoriesVisibilityClick(event) {\n        event.preventDefault()\n\n        const {target} = event\n\n        const {value} = target.dataset\n\n        const listButton = target.closest('.list-button')\n\n        const currentActivebutton = listButton.querySelector('button.active')\n        if (!!currentActivebutton) currentActivebutton.classList.remove('active')\n\n        target.classList.add('active')\n\n        this.updateRepositoriesVisibility(value)\n\n        App.toggleRepositoriesVisibility()\n    }\n\n\n    updateProfile(profile) {\n        console.log('App : updateProfile()', {profile})\n        if (!profile) profile = {}\n        localStorage.setItem(App.KEY_PROFILE_CACHE, JSON.stringify(profile))\n        this.setState({profile})\n    }\n\n\n    updateRepositories(repositories = {}) {\n        console.log('App : updateRepositories()', {repositories})\n        if (!repositories) repositories = {}\n        localStorage.setItem(App.KEY_REPOSITORIES_CACHE, JSON.stringify(repositories))\n        this.setState({repositories})\n    }\n\n\n    updateGists(gists = {}) {\n        console.log('App : updateGists()', {gists})\n        if (!gists) gists = {}\n        localStorage.setItem(App.KEY_GISTS_CACHE, JSON.stringify(gists))\n        this.setState({gists})\n    }\n\n\n    updateRepositoriesVisibility(repositoriesVisibility = 'all') {\n        console.log('App : updateRepositoriesVisibility()', {repositoriesVisibility})\n        localStorage.setItem(App.KEY_REPOSITORIES_VISIBILITY_CACHE, repositoriesVisibility)\n        this.setState({repositoriesVisibility})\n    }\n\n\n    static showPortfolioSection() {\n        const portfolioSection = document.querySelector('.App-section-portfolio')\n        portfolioSection.classList.add('show')\n        portfolioSection.classList.remove('hide')\n\n        const mainSection = document.querySelector('.App-section-main')\n        mainSection.classList.add('hide')\n\n        portfolioSection.scroll({top: 0})\n\n        App.clickOnRepositoriesVisibilityAll()\n    }\n\n\n    static showMainSection() {\n        const mainSection = document.querySelector('.App-section-main')\n        mainSection.classList.add('show')\n        mainSection.classList.remove('hide')\n\n        const portfolioSection = document.querySelector('.App-section-portfolio')\n        portfolioSection.classList.add('hide')\n    }\n\n\n    static handleDocumentKeypress(event) {\n        const {keyCode} = event\n        if (27 === keyCode) App.showMainSection()\n    }\n\n\n    static toggleRepositoriesVisibility() {\n        let repositoriesVisibility = localStorage.getItem(App.KEY_REPOSITORIES_VISIBILITY_CACHE)\n        if (!repositoriesVisibility) return;\n\n        const repositories = document.querySelectorAll('.Repository')\n        for (let repository of repositories) {\n\n            const {isFork} = repository.dataset;\n\n            if ('owns' === repositoriesVisibility && \"true\" === isFork) {\n                repository.classList.add('hide')\n                continue\n            }\n\n            if ('forks' === repositoriesVisibility && \"false\" === isFork) {\n                repository.classList.add('hide')\n                continue\n            }\n\n            repository.classList.remove('hide')\n\n        }\n    }\n\n\n    static handleErrorUnknownUser() {\n        App.removeClassHasErrorForFormGithubProfile('invalid-username')\n        App.addClassHasErrorForFormGithubProfile('unknown-user')\n    }\n\n\n    static handleErrorInvalidUsername() {\n        App.removeClassHasErrorForFormGithubProfile('unknown-user')\n        App.addClassHasErrorForFormGithubProfile('invalid-username')\n    }\n\n\n    static addClassHasErrorForFormGithubProfile(type) {\n        const formGithubProfile = document.forms['github-profile']\n        formGithubProfile.classList.add('has-error')\n        formGithubProfile.classList.add('has-error-' + type)\n\n        setTimeout(() => {\n            formGithubProfile.classList.remove('has-error')\n            formGithubProfile.classList.remove('has-error-' + type)\n        }, 3000)\n    }\n\n\n    static removeClassHasErrorForFormGithubProfile() {\n        const formGithubProfile = document.forms['github-profile']\n        formGithubProfile.classList.remove('has-error')\n        formGithubProfile.classList.remove('has-error-unknown-user')\n        formGithubProfile.classList.remove('has-error-invalid-username')\n    }\n\n\n    static disableSubmitInFormGithubProfile() {\n        const formGithubProfile = document.forms['github-profile']\n        const submitButton = formGithubProfile.elements['submit_github_profile']\n        submitButton.setAttribute('disabled', 'disabled')\n    }\n\n\n    static enableSubmitInFormGithubProfile() {\n        const formGithubProfile = document.forms['github-profile']\n        const submitButton = formGithubProfile.elements['submit_github_profile']\n        submitButton.removeAttribute('disabled')\n    }\n\n\n    static isEnableSubmitInFormGithubProfile() {\n        const formGithubProfile = document.forms['github-profile']\n        const submitButton = formGithubProfile.elements['submit_github_profile']\n        return false === submitButton.hasAttribute('disabled')\n    }\n\n\n    static handleBackClick(event) {\n        event.preventDefault()\n\n        App.showMainSection()\n    }\n\n    static setLoadingMessage(message) {\n        const loadingWrapper = document.querySelector('.App-section-main-loading-wrapper')\n        loadingWrapper.innerHTML = message\n    }\n\n    static clickOnRepositoriesVisibilityAll() {\n        const repositoriesVisibility = document.querySelector('.list-button[data-name=\"repositories-visibility\"]')\n        const allButton = repositoriesVisibility.querySelector('button[data-value=\"all\"]')\n        allButton.click()\n    }\n\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './scripts/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}