{"version":3,"sources":["components/Profile/index.js","components/Repository/index.js","components/Repositories/index.js","components/App/index.js","scripts/reportWebVitals.js","index.js"],"names":["Profile","props","console","log","login","avatar_url","id","node_id","html_url","gravatar_id","url","company","followers_url","following_url","gists_url","name","starred_url","subscriptions_url","organizations_url","repos_url","events_url","received_events_url","type","site_admin","location","bio","handleBackClick","style","backgroundImage","className","href","icon","faUsers","faMapMarkedAlt","onClick","Repository","description","language","stargazers_count","forks","handleRepositoryClick","fork","_private","private","data-url","data-is-fork","class","faCodeBranch","faUserSecret","faCode","faStar","Repositories","repositories","JSON","parse","length","map","repository","App","state","profile","localStorage","getItem","KEY_PROFILE_CACHE","KEY_REPOSITORIES_CACHE","repositoriesVisibility","KEY_REPOSITORIES_VISIBILITY_CACHE","updateProfile","bind","handleSubmit","handleRepositoriesVisibilityClick","document","addEventListener","handleDocumentKeypress","removeEventListener","this","action","placeholder","htmlFor","role","faArrowCircleRight","aria-labelledby","data-value","event","preventDefault","isEnableSubmitInFormGithubProfile","disableSubmitInFormGithubProfile","username","forms","elements","value","handleErrorInvalidUsername","enableSubmitInFormGithubProfile","endpoint","fetch","then","response","json","message","handleErrorUnknownUser","removeClassHasErrorForFormGithubProfile","updateRepositories","showPortfolioSection","catch","reason","error","finally","target","classList","contains","closest","dataset","window","currentActivebutton","querySelector","remove","add","updateRepositoriesVisibility","toggleRepositoriesVisibility","setItem","stringify","setState","portfolioSection","scroll","top","mainSection","keyCode","showMainSection","querySelectorAll","isFork","addClassHasErrorForFormGithubProfile","formGithubProfile","setTimeout","setAttribute","removeAttribute","hasAttribute","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b3a7f918.chunk.js","sourcesContent":["import './index.css'\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faUsers, faMapMarkedAlt} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport React from \"react\";\r\n\r\nfunction Profile(props) {\r\n\r\n    console.log('Profile', {props})\r\n\r\n    const {\r\n        login, id, node_id, avatar_url, gravatar_id, url, html_url, followers_url, following_url, gists_url, company,\r\n        starred_url, subscriptions_url, organizations_url, repos_url, events_url, received_events_url, type, site_admin,\r\n        name, location, bio, handleBackClick\r\n    } = props\r\n\r\n    const style = {\r\n        backgroundImage: `url(${avatar_url})`\r\n    }\r\n\r\n    return (\r\n        <article className=\"Profile\">\r\n            <div className=\"avatar\" style={style}></div>\r\n            <div className=\"Profile-description\">\r\n                {name ? <div className=\"username\">{name}</div> : null}\r\n                {login ? <a href={html_url}><div className=\"login\">@{login}</div></a> : null}\r\n                {bio ? <div className=\"bio\">{bio}</div> : null}\r\n            </div>\r\n            <div className=\"Profile-status\">\r\n                {company ? <div className=\"company\"><FontAwesomeIcon icon={faUsers}/>&nbsp;{company}</div> : null}\r\n                {location ? <div className=\"location\"><FontAwesomeIcon icon={faMapMarkedAlt}/>&nbsp;{location}</div> : null}\r\n            </div>\r\n            <div className=\"Profile-links\">\r\n                <a href=\"#\" className=\"active\">Repositories</a>\r\n                <a href=\"#\">Gists</a>\r\n            </div>\r\n            <div className=\"Profile-footer\">\r\n                <button onClick={handleBackClick}>Retour</button>\r\n            </div>\r\n        </article>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile\r\n","import './index.css'\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faCode, faStar, faCodeBranch, faUserSecret} from '@fortawesome/free-solid-svg-icons'\r\nimport React from \"react\";\r\n\r\n\r\nfunction Repository (props) {\r\n\r\n    let {\r\n        name, description, language, stargazers_count, forks, html_url, handleRepositoryClick, fork, private: _private\r\n    } = props\r\n\r\n    return (\r\n        <article className=\"Repository\" data-url={html_url} onClick={handleRepositoryClick} data-is-fork={fork}>\r\n            <div className=\"Repository-labels\">\r\n                {\r\n                    fork ? <span class=\"Repository-labels-fork\"><FontAwesomeIcon icon={faCodeBranch}/>&nbsp;Fork</span> : null\r\n                }\r\n                {\r\n                    _private ? <span class=\"Repository-labels-private\"><FontAwesomeIcon icon={faUserSecret}/>&nbsp;Private</span> : null\r\n                }\r\n            </div>\r\n            <span className=\"Repository-name\">{name}</span>\r\n            <span className=\"Repository-description\">{description}</span>\r\n            <div className=\"Repository-infos\">\r\n                <span className=\"Repository-infos-language\"><FontAwesomeIcon icon={faCode}/>&nbsp;{language}</span>\r\n                <span className=\"Repository-infos-stars\"><FontAwesomeIcon icon={faStar}/>&nbsp;{stargazers_count}</span>\r\n                <span className=\"Repository-infos-stars\"><FontAwesomeIcon icon={faCodeBranch}/>&nbsp;{forks}</span>\r\n            </div>\r\n        </article>\r\n    )\r\n\r\n}\r\n\r\nexport default Repository\r\n","import './index.css'\r\nimport React from \"react\";\r\nimport Repository from \"../Repository\";\r\n\r\nfunction Repositories(props) {\r\n\r\n    let {repositories, handleRepositoryClick} = props\r\n    if ('string' === typeof repositories) repositories = JSON.parse(repositories)\r\n\r\n    return (\r\n        <section className=\"Repositories\">\r\n            {\r\n                0 < repositories.length ? repositories.map(repository => (\r\n                    <Repository key={repository.id} {...repository} handleRepositoryClick={handleRepositoryClick}/>\r\n                )) : (\r\n                    <article>No repository found</article>\r\n                )\r\n            }\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default Repositories\r\n","import './index.css';\n\nimport React from \"react\";\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faArrowCircleRight} from '@fortawesome/free-solid-svg-icons'\n\nimport Profile from \"../Profile\";\nimport Repositories from \"../Repositories\";\n\nclass App extends React.Component {\n\n    static KEY_PROFILE_CACHE = 'github_portfolio_profile_cache'\n    static KEY_REPOSITORIES_CACHE = 'github_portfolio_repositories_cache'\n    static KEY_REPOSITORIES_VISIBILITY_CACHE = 'github_portfolio_repositories_visibility_cache'\n\n    state = {\n        profile: localStorage.getItem(App.KEY_PROFILE_CACHE),\n        repositories: localStorage.getItem(App.KEY_REPOSITORIES_CACHE),\n        repositoriesVisibility: localStorage.getItem(App.KEY_REPOSITORIES_VISIBILITY_CACHE)\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.updateProfile = this.updateProfile.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleRepositoryClick = this.handleRepositoryClick.bind(this)\n        this.handleRepositoriesVisibilityClick = this.handleRepositoriesVisibilityClick.bind(this)\n    }\n\n\n    componentDidMount() {\n        document.addEventListener('keydown', App.handleDocumentKeypress, false)\n    }\n\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', App.handleDocumentKeypress, false)\n    }\n\n\n    render() {\n\n        const {profile, repositories} = this.state\n\n        return (\n            <div className=\"App\">\n                <section className=\"App-section\">\n                    <section className=\"App-section-main show\">\n                        <div className=\"container\">\n                            <h1>Select a github profile<br/>to generate a portfolio</h1>\n                            <form action=\"#\" name=\"github-profile\">\n                                <div className=\"form-group\">\n                                    <input type=\"text\" name=\"username\" id=\"username\" placeholder=\" \"/>\n                                    <label htmlFor=\"username\">Pseudo Github</label>\n                                </div>\n                                <button role=\"button\" type=\"submit\" name=\"submit_github_profile\"\n                                        onClick={this.handleSubmit}>\n                                    <FontAwesomeIcon icon={faArrowCircleRight}/>\n                                </button>\n                                <aside className=\"error-helper-wrapper\">\n                                    <small className=\"error-helper\" aria-labelledby=\"unknown-user\">Unknown user</small>\n                                    <small className=\"error-helper\" aria-labelledby=\"invalid-username\">Invalid\n                                        username</small>\n                                </aside>\n                            </form>\n                        </div>\n                    </section>\n                    <section className=\"App-section-portfolio hide\">\n                        <aside className=\"App-section-portfolio-profile\">\n                            <Profile {...profile} handleBackClick={App.handleBackClick}/>\n                        </aside>\n                        <section className=\"App-section-portfolio-repositories\">\n                            <header className=\"App-section-portfolio-repositories-header\">\n                                <h2>Repositories</h2>\n                                <div className=\"App-section-portfolio-repositories-actions\">\n                                    <div className=\"list-button\">\n                                        <button className=\"active\" data-value=\"all\"\n                                                onClick={this.handleRepositoriesVisibilityClick}>All\n                                        </button>\n                                        <button data-value=\"owns\"\n                                                onClick={this.handleRepositoriesVisibilityClick}>Owns\n                                        </button>\n                                        <button data-value=\"forks\"\n                                                onClick={this.handleRepositoriesVisibilityClick}>Forks\n                                        </button>\n                                    </div>\n                                </div>\n                            </header>\n                            <Repositories repositories={repositories}\n                                          handleRepositoryClick={this.handleRepositoryClick}/>\n                        </section>\n                    </section>\n                </section>\n            </div>\n        )\n    }\n\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        if (false === App.isEnableSubmitInFormGithubProfile()) return\n\n        App.disableSubmitInFormGithubProfile()\n\n        const formGithubProfile = document.forms['github-profile']\n        const username = formGithubProfile.elements.username.value\n\n        if (!username) {\n            App.handleErrorInvalidUsername()\n            App.enableSubmitInFormGithubProfile()\n            return\n        }\n\n        const endpoint = `https://api.github.com/users/${username}`\n        fetch(endpoint)\n            .then(response => response.json())\n            .then(profile => {\n                const {message} = profile\n\n                if (!!message && 'Not Found' === message) {\n                    App.handleErrorUnknownUser()\n                    return\n                }\n\n                App.removeClassHasErrorForFormGithubProfile()\n\n                this.updateProfile(profile)\n                const {repos_url} = profile\n\n                fetch(repos_url)\n                    .then(response => response.json())\n                    .then(repositories => {\n\n                        this.updateRepositories(repositories)\n                        App.showPortfolioSection()\n\n                    })\n                    .catch(reason => console.error)\n            })\n            .catch(reason => console.error)\n            .finally(() => {\n                App.enableSubmitInFormGithubProfile()\n            })\n    }\n\n\n    handleRepositoryClick(event) {\n        event.preventDefault()\n\n        let {target} = event\n\n        if (!target.classList.contains('Repository')) {\n            target = target.closest('.Repository')\n        }\n\n        const {url} = target.dataset\n\n        window.location.href = url\n    }\n\n\n    handleRepositoriesVisibilityClick(event) {\n        event.preventDefault()\n\n        const {target} = event\n\n        const {value} = target.dataset\n\n        const listButton = target.closest('.list-button')\n\n        const currentActivebutton = listButton.querySelector('button.active')\n        if (!!currentActivebutton) currentActivebutton.classList.remove('active')\n\n        target.classList.add('active')\n\n        this.updateRepositoriesVisibility(value)\n\n        App.toggleRepositoriesVisibility()\n    }\n\n\n    updateProfile(profile) {\n        console.log('App : updateProfile()', {profile})\n        if (!profile) profile = {}\n        localStorage.setItem(App.KEY_PROFILE_CACHE, JSON.stringify(profile))\n        this.setState({profile})\n    }\n\n\n    updateRepositories(repositories = {}) {\n        console.log('App : updateRepositories()', {repositories})\n        if (!repositories) repositories = {}\n        localStorage.setItem(App.KEY_REPOSITORIES_CACHE, JSON.stringify(repositories))\n        this.setState({repositories})\n    }\n\n\n    updateRepositoriesVisibility(repositoriesVisibility = 'all') {\n        console.log('App : updateRepositoriesVisibility()', {repositoriesVisibility})\n        localStorage.setItem(App.KEY_REPOSITORIES_VISIBILITY_CACHE, repositoriesVisibility)\n        this.setState({repositoriesVisibility})\n    }\n\n\n    static showPortfolioSection() {\n        const portfolioSection = document.querySelector('.App-section-portfolio')\n        portfolioSection.classList.add('show')\n        portfolioSection.classList.remove('hide')\n\n        const mainSection = document.querySelector('.App-section-main')\n        mainSection.classList.add('hide')\n\n        portfolioSection.scroll({top: 0})\n    }\n\n\n    static showMainSection() {\n        const mainSection = document.querySelector('.App-section-main')\n        mainSection.classList.add('show')\n        mainSection.classList.remove('hide')\n\n        const portfolioSection = document.querySelector('.App-section-portfolio')\n        portfolioSection.classList.add('hide')\n    }\n\n\n    static handleDocumentKeypress(event) {\n        const {keyCode} = event\n        if (27 === keyCode) App.showMainSection()\n    }\n\n\n    static toggleRepositoriesVisibility() {\n        let repositoriesVisibility = localStorage.getItem(App.KEY_REPOSITORIES_VISIBILITY_CACHE)\n        if (!repositoriesVisibility) return;\n\n        const repositories = document.querySelectorAll('.Repository')\n        for (let repository of repositories) {\n\n            const {isFork} = repository.dataset;\n\n            if ('owns' === repositoriesVisibility && \"true\" === isFork) {\n                repository.classList.add('hide')\n                continue\n            }\n\n            if ('forks' === repositoriesVisibility && \"false\" === isFork) {\n                repository.classList.add('hide')\n                continue\n            }\n\n            repository.classList.remove('hide')\n\n        }\n    }\n\n\n    static handleErrorUnknownUser() {\n        App.removeClassHasErrorForFormGithubProfile('invalid-username')\n        App.addClassHasErrorForFormGithubProfile('unknown-user')\n    }\n\n\n    static handleErrorInvalidUsername() {\n        App.removeClassHasErrorForFormGithubProfile('unknown-user')\n        App.addClassHasErrorForFormGithubProfile('invalid-username')\n    }\n\n\n    static addClassHasErrorForFormGithubProfile(type) {\n        const formGithubProfile = document.forms['github-profile']\n        formGithubProfile.classList.add('has-error')\n        formGithubProfile.classList.add('has-error-' + type)\n\n        setTimeout(() => {\n            formGithubProfile.classList.remove('has-error')\n            formGithubProfile.classList.remove('has-error-' + type)\n        }, 3000)\n    }\n\n\n    static removeClassHasErrorForFormGithubProfile() {\n        const formGithubProfile = document.forms['github-profile']\n        formGithubProfile.classList.remove('has-error')\n        formGithubProfile.classList.remove('has-error-unknown-user')\n        formGithubProfile.classList.remove('has-error-invalid-username')\n    }\n\n\n    static disableSubmitInFormGithubProfile() {\n        const formGithubProfile = document.forms['github-profile']\n        const submitButton = formGithubProfile.elements['submit_github_profile']\n        submitButton.setAttribute('disabled', 'disabled')\n    }\n\n\n    static enableSubmitInFormGithubProfile() {\n        const formGithubProfile = document.forms['github-profile']\n        const submitButton = formGithubProfile.elements['submit_github_profile']\n        submitButton.removeAttribute('disabled')\n    }\n\n\n    static isEnableSubmitInFormGithubProfile() {\n        const formGithubProfile = document.forms['github-profile']\n        const submitButton = formGithubProfile.elements['submit_github_profile']\n        return false === submitButton.hasAttribute('disabled')\n    }\n\n\n    static handleBackClick(event) {\n        event.preventDefault()\n\n        App.showMainSection()\n    }\n\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './scripts/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}