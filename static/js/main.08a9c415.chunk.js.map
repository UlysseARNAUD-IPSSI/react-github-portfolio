{"version":3,"sources":["components/Profile/index.js","components/Repository/index.js","components/Repositories/index.js","components/App/index.js","scripts/reportWebVitals.js","index.js"],"names":["Profile","props","console","log","login","avatar_url","id","node_id","html_url","gravatar_id","url","company","followers_url","following_url","gists_url","name","starred_url","subscriptions_url","organizations_url","repos_url","events_url","received_events_url","type","site_admin","location","bio","style","backgroundImage","className","href","icon","faUsers","faMapMarkedAlt","Repository","description","language","stargazers_count","forks","handleRepositoryClick","data-url","onClick","faCode","faStar","faCodeBranch","Repositories","repositories","JSON","parse","map","repository","App","state","profile","localStorage","getItem","KEY_PROFILE_CACHE","KEY_REPOSITORIES_CACHE","updateProfile","bind","handleSubmit","document","addEventListener","handleDocumentKeypress","removeEventListener","this","action","placeholder","htmlFor","role","faArrowCircleRight","event","preventDefault","username","forms","elements","value","endpoint","fetch","then","response","json","updateRepositories","showPortfolioSection","catch","reason","target","dataset","window","setItem","stringify","setState","portfolioSection","querySelector","classList","add","remove","mainSection","keyCode","showMainSection","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.08a9c415.chunk.js","sourcesContent":["import './index.css'\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faUsers, faMapMarkedAlt} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport React from \"react\";\r\n\r\nfunction Profile(props) {\r\n\r\n    console.log('Profile', {props})\r\n\r\n    const {\r\n        login, id, node_id, avatar_url, gravatar_id, url, html_url, followers_url, following_url, gists_url, company,\r\n        starred_url, subscriptions_url, organizations_url, repos_url, events_url, received_events_url, type, site_admin,\r\n        name, location, bio\r\n    } = props\r\n\r\n    const style = {\r\n        backgroundImage: `url(${avatar_url})`\r\n    }\r\n\r\n    return (\r\n        <article className=\"Profile\">\r\n            <div className=\"avatar\" style={style}></div>\r\n            <div className=\"Profile-description\">\r\n                {name ? <div className=\"username\">{name}</div> : null}\r\n                {login ? <a href={html_url}><div className=\"login\">@{login}</div></a> : null}\r\n                {bio ? <div className=\"bio\">{bio}</div> : null}\r\n            </div>\r\n            <div className=\"Profile-status\">\r\n                {company ? <div className=\"company\"><FontAwesomeIcon icon={faUsers}/>&nbsp;{company}</div> : null}\r\n                {location ? <div className=\"location\"><FontAwesomeIcon icon={faMapMarkedAlt}/>&nbsp;{location}</div> : null}\r\n            </div>\r\n        </article>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile\r\n","import './index.css'\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faCode, faStar, faCodeBranch} from '@fortawesome/free-solid-svg-icons'\r\nimport React from \"react\";\r\n\r\n\r\nfunction Repository (props) {\r\n\r\n    const {name, description, language, stargazers_count, forks, html_url, handleRepositoryClick} = props\r\n\r\n    return (\r\n        <article className=\"Repository\" data-url={html_url} onClick={handleRepositoryClick}>\r\n            <span className=\"Repository-name\">{name}</span>\r\n            <span className=\"Repository-description\">{description}</span>\r\n            <div className=\"Repository-infos\">\r\n                <span className=\"Repository-infos-language\"><FontAwesomeIcon icon={faCode}/>&nbsp;{language}</span>\r\n                <span className=\"Repository-infos-stars\"><FontAwesomeIcon icon={faStar}/>&nbsp;{stargazers_count}</span>\r\n                <span className=\"Repository-infos-stars\"><FontAwesomeIcon icon={faCodeBranch}/>&nbsp;{forks}</span>\r\n            </div>\r\n        </article>\r\n    )\r\n\r\n}\r\n\r\nexport default Repository\r\n","import './index.css'\r\nimport React from \"react\";\r\nimport Repository from \"../Repository\";\r\n\r\nfunction Repositories (props) {\r\n\r\n    let {repositories, handleRepositoryClick} = props\r\n    if ('string' === typeof repositories) repositories = JSON.parse(repositories)\r\n\r\n    console.log({repositories})\r\n\r\n    return (\r\n        <section className=\"Repositories\">\r\n            {repositories.map(repository => (\r\n                <Repository key={repository.id} {...repository} handleRepositoryClick={handleRepositoryClick} />\r\n            ))}\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default Repositories\r\n","import './index.css';\n\nimport React from \"react\";\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faArrowCircleRight} from '@fortawesome/free-solid-svg-icons'\n\nimport Profile from \"../Profile\";\nimport Repositories from \"../Repositories\";\n\nclass App extends React.Component {\n\n    static KEY_PROFILE_CACHE = 'github_portfolio_profile_cache'\n    static KEY_REPOSITORIES_CACHE = 'github_portfolio_repositories_cache'\n\n    state = {\n        profile: localStorage.getItem(App.KEY_PROFILE_CACHE),\n        repositories: localStorage.getItem(App.KEY_REPOSITORIES_CACHE)\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.updateProfile = this.updateProfile.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleRepositoryClick = this.handleRepositoryClick.bind(this)\n    }\n\n\n    componentDidMount() {\n        document.addEventListener('keydown', App.handleDocumentKeypress, false)\n    }\n\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', App.handleDocumentKeypress, false)\n    }\n\n\n    render() {\n\n        const {profile, repositories} = this.state\n\n        return (\n            <div className=\"App\">\n                <section className=\"App-section\">\n                    <section className=\"App-section-main show\">\n                        <div className=\"container\">\n                            <h1>Select a github profile<br/>to generate a portfolio</h1>\n                            <form action=\"#\" name=\"github-profile\">\n                                <div className=\"form-group\">\n                                    <input type=\"text\" name=\"username\" id=\"username\" placeholder=\" \"/>\n                                    <label htmlFor=\"username\">Pseudo Github</label>\n                                </div>\n                                <button role=\"button\" type=\"submit\" onClick={this.handleSubmit}><FontAwesomeIcon\n                                    icon={faArrowCircleRight}/></button>\n                            </form>\n                        </div>\n                    </section>\n                    <section className=\"App-section-portfolio hide\">\n                        <aside className=\"App-section-portfolio-profile\">\n                            <Profile {...profile} />\n                        </aside>\n                        <section className=\"App-section-portfolio-repositories\">\n                            <h2>Repositories</h2>\n                            <Repositories repositories={repositories} handleRepositoryClick={this.handleRepositoryClick}/>\n                        </section>\n                    </section>\n                </section>\n            </div>\n        )\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const formGithubProfile = document.forms['github-profile']\n        const username = formGithubProfile.elements.username.value\n\n        const endpoint = `https://api.github.com/users/${username}`\n        fetch(endpoint)\n            .then(response => response.json())\n            .then(profile => {\n                this.updateProfile(profile)\n                const {repos_url} = profile\n\n                fetch(repos_url)\n                    .then(response => response.json())\n                    .then(repositories => {\n\n                        this.updateRepositories(repositories)\n                        App.showPortfolioSection()\n\n                    })\n                    .catch(reason => console.log)\n            })\n            .catch(reason => console.log)\n    }\n\n    handleRepositoryClick(event) {\n        event.preventDefault()\n\n        const {target} = event\n        const {url} = target.dataset\n\n        window.location.href = url\n    }\n\n\n    updateProfile(profile) {\n        console.log('App : updateProfile()', {profile})\n        if (!profile) profile = {}\n        localStorage.setItem(App.KEY_PROFILE_CACHE, JSON.stringify(profile))\n        this.setState({profile})\n    }\n\n\n    updateRepositories(repositories = {}) {\n        console.log('App : updateRepositories()', {repositories})\n        if (!repositories) repositories = {}\n        localStorage.setItem(App.KEY_REPOSITORIES_CACHE, JSON.stringify(repositories))\n        this.setState({repositories})\n    }\n\n\n    static showPortfolioSection() {\n        const portfolioSection = document.querySelector('.App-section-portfolio')\n        portfolioSection.classList.add('show')\n        portfolioSection.classList.remove('hide')\n\n        const mainSection = document.querySelector('.App-section-main')\n        mainSection.classList.add('hide')\n    }\n\n\n    static showMainSection() {\n        const mainSection = document.querySelector('.App-section-main')\n        mainSection.classList.add('show')\n        mainSection.classList.remove('hide')\n\n        const portfolioSection = document.querySelector('.App-section-portfolio')\n        portfolioSection.classList.add('hide')\n    }\n\n\n    static handleDocumentKeypress(event) {\n        const {keyCode} = event\n        if (27 === keyCode) App.showMainSection()\n    }\n\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './scripts/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}