{"version":3,"sources":["components/Profile/index.js","components/Repository/index.js","components/Repositories/index.js","components/App/index.js","scripts/reportWebVitals.js","index.js"],"names":["Profile","props","console","log","login","avatar_url","id","node_id","html_url","gravatar_id","url","company","followers_url","following_url","gists_url","name","starred_url","subscriptions_url","organizations_url","repos_url","events_url","received_events_url","type","site_admin","location","bio","handleBackClick","style","backgroundImage","className","href","icon","faUsers","faMapMarkedAlt","onClick","Repository","description","language","stargazers_count","forks","handleRepositoryClick","fork","data-url","data-is-fork","faCode","faStar","faCodeBranch","Repositories","repositories","JSON","parse","map","repository","App","state","profile","localStorage","getItem","KEY_PROFILE_CACHE","KEY_REPOSITORIES_CACHE","repositoriesVisibility","KEY_REPOSITORIES_VISIBILITY_CACHE","updateProfile","bind","handleSubmit","handleRepositoriesVisibilityClick","document","addEventListener","handleDocumentKeypress","removeEventListener","this","action","placeholder","htmlFor","role","faArrowCircleRight","class","aria-labelledby","data-value","event","preventDefault","username","forms","elements","value","endpoint","fetch","then","response","json","message","handleErrorUnknownUser","removeClassHasErrorForFormGithubProfile","updateRepositories","showPortfolioSection","catch","reason","error","handleErrorInvalidUsername","target","dataset","window","currentActivebutton","closest","querySelector","classList","remove","add","updateRepositoriesVisibility","toggleRepositoriesVisibility","setItem","stringify","setState","portfolioSection","mainSection","keyCode","showMainSection","querySelectorAll","isFork","addClassHasErrorForFormGithubProfile","formGithubProfile","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e72986b7.chunk.js","sourcesContent":["import './index.css'\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faUsers, faMapMarkedAlt} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport React from \"react\";\r\n\r\nfunction Profile(props) {\r\n\r\n    console.log('Profile', {props})\r\n\r\n    const {\r\n        login, id, node_id, avatar_url, gravatar_id, url, html_url, followers_url, following_url, gists_url, company,\r\n        starred_url, subscriptions_url, organizations_url, repos_url, events_url, received_events_url, type, site_admin,\r\n        name, location, bio, handleBackClick\r\n    } = props\r\n\r\n    const style = {\r\n        backgroundImage: `url(${avatar_url})`\r\n    }\r\n\r\n    return (\r\n        <article className=\"Profile\">\r\n            <div className=\"avatar\" style={style}></div>\r\n            <div className=\"Profile-description\">\r\n                {name ? <div className=\"username\">{name}</div> : null}\r\n                {login ? <a href={html_url}><div className=\"login\">@{login}</div></a> : null}\r\n                {bio ? <div className=\"bio\">{bio}</div> : null}\r\n            </div>\r\n            <div className=\"Profile-status\">\r\n                {company ? <div className=\"company\"><FontAwesomeIcon icon={faUsers}/>&nbsp;{company}</div> : null}\r\n                {location ? <div className=\"location\"><FontAwesomeIcon icon={faMapMarkedAlt}/>&nbsp;{location}</div> : null}\r\n            </div>\r\n            <div className=\"Profile-footer\">\r\n                <button onClick={handleBackClick}>Retour</button>\r\n            </div>\r\n        </article>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile\r\n","import './index.css'\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faCode, faStar, faCodeBranch} from '@fortawesome/free-solid-svg-icons'\r\nimport React from \"react\";\r\n\r\n\r\nfunction Repository (props) {\r\n\r\n    const {name, description, language, stargazers_count, forks, html_url, handleRepositoryClick, fork} = props\r\n\r\n    return (\r\n        <article className=\"Repository\" data-url={html_url} onClick={handleRepositoryClick} data-is-fork={fork}>\r\n            <span className=\"Repository-name\">{name}</span>\r\n            <span className=\"Repository-description\">{description}</span>\r\n            <div className=\"Repository-infos\">\r\n                <span className=\"Repository-infos-language\"><FontAwesomeIcon icon={faCode}/>&nbsp;{language}</span>\r\n                <span className=\"Repository-infos-stars\"><FontAwesomeIcon icon={faStar}/>&nbsp;{stargazers_count}</span>\r\n                <span className=\"Repository-infos-stars\"><FontAwesomeIcon icon={faCodeBranch}/>&nbsp;{forks}</span>\r\n            </div>\r\n        </article>\r\n    )\r\n\r\n}\r\n\r\nexport default Repository\r\n","import './index.css'\r\nimport React from \"react\";\r\nimport Repository from \"../Repository\";\r\n\r\nfunction Repositories(props) {\r\n\r\n    let {repositories, handleRepositoryClick} = props\r\n    if ('string' === typeof repositories) repositories = JSON.parse(repositories)\r\n\r\n    return (\r\n        <section className=\"Repositories\">\r\n            {\r\n                !! repositories ? repositories.map(repository => (\r\n                    <Repository key={repository.id} {...repository} handleRepositoryClick={handleRepositoryClick}/>\r\n                )) : (\r\n                    <article>No repository found</article>\r\n                )\r\n            }\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default Repositories\r\n","import './index.css';\n\nimport React from \"react\";\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faArrowCircleRight} from '@fortawesome/free-solid-svg-icons'\n\nimport Profile from \"../Profile\";\nimport Repositories from \"../Repositories\";\n\nclass App extends React.Component {\n\n    static KEY_PROFILE_CACHE = 'github_portfolio_profile_cache'\n    static KEY_REPOSITORIES_CACHE = 'github_portfolio_repositories_cache'\n    static KEY_REPOSITORIES_VISIBILITY_CACHE = 'github_portfolio_repositories_visibility_cache'\n\n    state = {\n        profile: localStorage.getItem(App.KEY_PROFILE_CACHE),\n        repositories: localStorage.getItem(App.KEY_REPOSITORIES_CACHE),\n        repositoriesVisibility : localStorage.getItem(App.KEY_REPOSITORIES_VISIBILITY_CACHE)\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.updateProfile = this.updateProfile.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleRepositoryClick = this.handleRepositoryClick.bind(this)\n        this.handleRepositoriesVisibilityClick = this.handleRepositoriesVisibilityClick.bind(this)\n    }\n\n\n    componentDidMount() {\n        document.addEventListener('keydown', App.handleDocumentKeypress, false)\n    }\n\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', App.handleDocumentKeypress, false)\n    }\n\n\n    render() {\n\n        const {profile, repositories} = this.state\n\n        return (\n            <div className=\"App\">\n                <section className=\"App-section\">\n                    <section className=\"App-section-main show\">\n                        <div className=\"container\">\n                            <h1>Select a github profile<br/>to generate a portfolio</h1>\n                            <form action=\"#\" name=\"github-profile\">\n                                <div className=\"form-group\">\n                                    <input type=\"text\" name=\"username\" id=\"username\" placeholder=\" \"/>\n                                    <label htmlFor=\"username\">Pseudo Github</label>\n                                </div>\n                                <button role=\"button\" type=\"submit\" onClick={this.handleSubmit}><FontAwesomeIcon\n                                    icon={faArrowCircleRight}/></button>\n                                <aside class=\"error-helper-wrapper\">\n                                    <small className=\"error-helper\" aria-labelledby=\"unknown-user\">Unknown user</small>\n                                    <small className=\"error-helper\" aria-labelledby=\"invalid-username\">Invalid username</small>\n                                </aside>\n                            </form>\n                        </div>\n                    </section>\n                    <section className=\"App-section-portfolio hide\">\n                        <aside className=\"App-section-portfolio-profile\">\n                            <Profile {...profile} handleBackClick={App.handleBackClick}/>\n                        </aside>\n                        <section className=\"App-section-portfolio-repositories\">\n                            <header className=\"App-section-portfolio-repositories-header\">\n                                <h2>Repositories</h2>\n                                <div className=\"App-section-portfolio-repositories-actions\">\n                                    <div className=\"list-button\">\n                                        <button className=\"active\" data-value=\"all\" onClick={this.handleRepositoriesVisibilityClick}>All</button>\n                                        <button data-value=\"owns\" onClick={this.handleRepositoriesVisibilityClick}>Owns</button>\n                                        <button data-value=\"forks\" onClick={this.handleRepositoriesVisibilityClick}>Forks</button>\n                                    </div>\n                                </div>\n                            </header>\n                            <Repositories repositories={repositories} handleRepositoryClick={this.handleRepositoryClick}/>\n                        </section>\n                    </section>\n                </section>\n            </div>\n        )\n    }\n\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const formGithubProfile = document.forms['github-profile']\n        const username = formGithubProfile.elements.username.value\n\n        if (!username) {\n            App.handleErrorInvalidUsername()\n            return\n        }\n\n        const endpoint = `https://api.github.com/users/${username}`\n        fetch(endpoint)\n            .then(response => response.json())\n            .then(profile => {\n                const {message} = profile\n\n                if (!!message && 'Not Found' === message) {\n                    App.handleErrorUnknownUser()\n                    return\n                }\n\n                App.removeClassHasErrorForFormGithubProfile()\n\n                this.updateProfile(profile)\n                const {repos_url} = profile\n\n                fetch(repos_url)\n                    .then(response => response.json())\n                    .then(repositories => {\n\n                        this.updateRepositories(repositories)\n                        App.showPortfolioSection()\n\n                    })\n                    .catch(reason => console.log)\n            })\n            .catch(reason => console.error)\n    }\n\n\n    handleRepositoryClick(event) {\n        event.preventDefault()\n\n        const {target} = event\n        const {url} = target.dataset\n\n        window.location.href = url\n    }\n\n\n    handleRepositoriesVisibilityClick(event) {\n        event.preventDefault()\n\n        const {target} = event\n\n        const {value} = target.dataset\n\n        const listButton = target.closest('.list-button')\n\n        const currentActivebutton = listButton.querySelector('button.active')\n        if (!!currentActivebutton) currentActivebutton.classList.remove('active')\n\n        target.classList.add('active')\n\n        this.updateRepositoriesVisibility(value)\n\n        App.toggleRepositoriesVisibility()\n    }\n\n\n    updateProfile(profile) {\n        console.log('App : updateProfile()', {profile})\n        if (!profile) profile = {}\n        localStorage.setItem(App.KEY_PROFILE_CACHE, JSON.stringify(profile))\n        this.setState({profile})\n    }\n\n\n    updateRepositories(repositories = {}) {\n        console.log('App : updateRepositories()', {repositories})\n        if (!repositories) repositories = {}\n        localStorage.setItem(App.KEY_REPOSITORIES_CACHE, JSON.stringify(repositories))\n        this.setState({repositories})\n    }\n\n\n    updateRepositoriesVisibility(repositoriesVisibility = 'all') {\n        console.log('App : updateRepositoriesVisibility()', {repositoriesVisibility})\n        localStorage.setItem(App.KEY_REPOSITORIES_VISIBILITY_CACHE, repositoriesVisibility)\n        this.setState({repositoriesVisibility})\n    }\n\n\n    static showPortfolioSection() {\n        const portfolioSection = document.querySelector('.App-section-portfolio')\n        portfolioSection.classList.add('show')\n        portfolioSection.classList.remove('hide')\n\n        const mainSection = document.querySelector('.App-section-main')\n        mainSection.classList.add('hide')\n    }\n\n\n    static showMainSection() {\n        const mainSection = document.querySelector('.App-section-main')\n        mainSection.classList.add('show')\n        mainSection.classList.remove('hide')\n\n        const portfolioSection = document.querySelector('.App-section-portfolio')\n        portfolioSection.classList.add('hide')\n    }\n\n\n    static handleDocumentKeypress(event) {\n        const {keyCode} = event\n        if (27 === keyCode) App.showMainSection()\n    }\n\n\n    static toggleRepositoriesVisibility() {\n        let repositoriesVisibility = localStorage.getItem(App.KEY_REPOSITORIES_VISIBILITY_CACHE)\n        if (!repositoriesVisibility) return;\n\n        const repositories = document.querySelectorAll('.Repository')\n        for (let repository of repositories) {\n\n            const {isFork} = repository.dataset;\n\n            if ('owns' === repositoriesVisibility && \"true\" === isFork) {\n                repository.classList.add('hide')\n                continue\n            }\n\n            if ('forks' === repositoriesVisibility && \"false\" === isFork) {\n                repository.classList.add('hide')\n                continue\n            }\n\n            repository.classList.remove('hide')\n\n        }\n    }\n\n\n    static handleErrorUnknownUser() {\n        App.removeClassHasErrorForFormGithubProfile('invalid-username')\n        App.addClassHasErrorForFormGithubProfile('unknown-user')\n    }\n\n\n    static handleErrorInvalidUsername() {\n        App.removeClassHasErrorForFormGithubProfile('unknown-user')\n        App.addClassHasErrorForFormGithubProfile('invalid-username')\n    }\n\n    static addClassHasErrorForFormGithubProfile(type = 'unknown-user') {\n        const formGithubProfile = document.forms['github-profile']\n        formGithubProfile.classList.add('has-error')\n        formGithubProfile.classList.add('has-error-' + type)\n    }\n\n    static removeClassHasErrorForFormGithubProfile() {\n        const formGithubProfile = document.forms['github-profile']\n        formGithubProfile.classList.remove('has-error')\n        formGithubProfile.classList.remove('has-error-unknown-user')\n        formGithubProfile.classList.remove('has-error-invalid-username')\n    }\n\n\n    static handleBackClick(event) {\n        event.preventDefault()\n\n        App.showMainSection()\n    }\n\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './scripts/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}