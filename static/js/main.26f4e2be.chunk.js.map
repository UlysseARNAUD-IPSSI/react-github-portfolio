{"version":3,"sources":["components/Profile/index.js","components/Repository/index.js","components/Repositories/index.js","components/App/index.js","scripts/reportWebVitals.js","index.js"],"names":["Profile","props","console","log","login","avatar_url","id","node_id","html_url","gravatar_id","url","company","followers_url","following_url","gists_url","name","starred_url","subscriptions_url","organizations_url","repos_url","events_url","received_events_url","type","site_admin","location","style","backgroundImage","className","href","icon","faUsers","faMapMarkedAlt","Repository","repository","Repositories","repositories","JSON","parse","map","App","state","profile","localStorage","getItem","KEY_PROFILE_CACHE","KEY_REPOSITORIES_CACHE","updateProfile","bind","handleSubmit","document","addEventListener","handleDocumentKeypress","removeEventListener","this","action","placeholder","htmlFor","role","onClick","faArrowCircleRight","event","preventDefault","username","forms","elements","value","endpoint","fetch","then","response","json","updateRepositories","showPortfolioSection","catch","reason","setItem","stringify","setState","portfolioSection","querySelector","classList","add","remove","mainSection","keyCode","showMainSection","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.26f4e2be.chunk.js","sourcesContent":["import './index.css'\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faUsers, faMapMarkedAlt} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport React from \"react\";\r\n\r\nfunction Profile(props) {\r\n\r\n    console.log('Profile', {props})\r\n\r\n    const {\r\n        login, id, node_id, avatar_url, gravatar_id, url, html_url, followers_url, following_url, gists_url, company,\r\n        starred_url, subscriptions_url, organizations_url, repos_url, events_url, received_events_url, type, site_admin,\r\n        name, location\r\n    } = props\r\n\r\n    const style = {\r\n        backgroundImage: `url(${avatar_url})`\r\n    }\r\n\r\n    return (\r\n        <article className=\"Profile\">\r\n            <div className=\"avatar\" style={style}></div>\r\n            {name ? <div className=\"username\">{name}</div> : null}\r\n            {login ? <a href={html_url}><div className=\"login\">@{login}</div></a> : null}\r\n            {company ? <div className=\"company\"><FontAwesomeIcon icon={faUsers}/>&nbsp;{company}</div> : null}\r\n            {location ? <div className=\"location\"><FontAwesomeIcon icon={faMapMarkedAlt}/>&nbsp;{location}</div> : null}\r\n        </article>\r\n    )\r\n\r\n}\r\n\r\nexport default Profile\r\n","import './index.css'\r\n\r\nfunction Repository (props) {\r\n\r\n    const {repository} = props\r\n\r\n    return (\r\n        <article className=\"Repository\">\r\n            Repository\r\n        </article>\r\n    )\r\n\r\n}\r\n\r\nexport default Repository\r\n","import './index.css'\r\nimport React from \"react\";\r\nimport Repository from \"../Repository\";\r\n\r\nfunction Repositories (props) {\r\n\r\n    let {repositories} = props\r\n    if ('string' === typeof repositories) repositories = JSON.parse(repositories)\r\n\r\n    console.log({repositories})\r\n\r\n    return (\r\n        <section className=\"Repositories\">\r\n            {repositories.map(repository => (\r\n                <Repository key={repository.id} {...repository} />\r\n            ))}\r\n        </section>\r\n    )\r\n\r\n}\r\n\r\nexport default Repositories\r\n","import './index.css';\n\nimport React from \"react\";\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faArrowCircleRight} from '@fortawesome/free-solid-svg-icons'\n\nimport Profile from \"../Profile\";\nimport Repositories from \"../Repositories\";\n\nclass App extends React.Component {\n\n    static KEY_PROFILE_CACHE = 'github_portfolio_profile_cache'\n    static KEY_REPOSITORIES_CACHE = 'github_portfolio_repositories_cache'\n\n    state = {\n        profile: localStorage.getItem(App.KEY_PROFILE_CACHE),\n        repositories: localStorage.getItem(App.KEY_REPOSITORIES_CACHE)\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.updateProfile = this.updateProfile.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n\n    componentDidMount() {\n        document.addEventListener('keydown', App.handleDocumentKeypress, false)\n    }\n\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', App.handleDocumentKeypress, false)\n    }\n\n\n    render() {\n\n        const {profile, repositories} = this.state\n\n        return (\n            <div className=\"App\">\n                <section className=\"App-section\">\n                    <section className=\"App-section-main show\">\n                        <div className=\"container\">\n                            <h1>Select a github profile<br/>to generate a portfolio</h1>\n                            <form action=\"#\" name=\"github-profile\">\n                                <div className=\"form-group\">\n                                    <input type=\"text\" name=\"username\" id=\"username\" placeholder=\" \"/>\n                                    <label htmlFor=\"username\">Pseudo Github</label>\n                                </div>\n                                <button role=\"button\" type=\"submit\" onClick={this.handleSubmit}><FontAwesomeIcon\n                                    icon={faArrowCircleRight}/></button>\n                            </form>\n                        </div>\n                    </section>\n                    <section className=\"App-section-portfolio hide\">\n                        <aside className=\"App-section-portfolio-profile\">\n                            <Profile {...profile} />\n                        </aside>\n                        <section className=\"App-section-portfolio-repositories\">\n                            <h2>Repositories</h2>\n                            <Repositories repositories={repositories}/>\n                        </section>\n                    </section>\n                </section>\n            </div>\n        )\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        const formGithubProfile = document.forms['github-profile']\n        const username = formGithubProfile.elements.username.value\n\n        const endpoint = `https://api.github.com/users/${username}`\n        fetch(endpoint)\n            .then(response => response.json())\n            .then(profile => {\n                this.updateProfile(profile)\n                const {repos_url} = profile\n\n                fetch(repos_url)\n                    .then(response => response.json())\n                    .then(repositories => {\n\n                        this.updateRepositories(repositories)\n                        App.showPortfolioSection()\n\n                    })\n                    .catch(reason => console.log)\n                /* const {\n                    id, node_id, name, full_name, private, owner, html_url, description, fork, url, forks_url, keys_url,\n                    collaborators_url, teams_url, hooks_url, issue_events_url, events_url, assignees_url, branches_url,\n                    tags_url, blobs_url, git_tags_url, git_refs_url, trees_url, statuses_url, languages_url,\n                    stargazers_url, contributors_url, subscribers_url, subscription_url, commits_url, git_commits_url,\n                    comments_url, issue_comment_url, contents_url, compare_url, merges_url, archive_url, downloads_url,\n                    issues_url, pulls_url, milestones_url, notifications_url, labels_url, releases_url, deployments_url,\n                    created_at, updated_at, pushed_at, git_url, ssh_url, clone_url, svn_url, homepage, size,\n                    stargazers_count, watchers_count, language, has_issues, has_projects, has_downloads, has_wiki,\n                    has_pages, forks_count, mirror_url, archived, disabled, open_issues_count, license, forks,\n                    open_issues, watchers, default_branch\n                } = repository */\n            })\n            .catch(reason => console.log)\n    }\n\n\n    updateProfile(profile) {\n        console.log('App : updateProfile()', {profile})\n        if (!profile) profile = {}\n        localStorage.setItem(App.KEY_PROFILE_CACHE, JSON.stringify(profile))\n        this.setState({profile})\n    }\n\n\n    updateRepositories(repositories = {}) {\n        console.log('App : updateRepositories()', {repositories})\n        if (!repositories) repositories = {}\n        localStorage.setItem(App.KEY_REPOSITORIES_CACHE, JSON.stringify(repositories))\n        this.setState({repositories})\n    }\n\n\n    static showPortfolioSection() {\n        const portfolioSection = document.querySelector('.App-section-portfolio')\n        portfolioSection.classList.add('show')\n        portfolioSection.classList.remove('hide')\n\n        const mainSection = document.querySelector('.App-section-main')\n        mainSection.classList.add('hide')\n    }\n\n\n    static showMainSection() {\n        const mainSection = document.querySelector('.App-section-main')\n        mainSection.classList.add('show')\n        mainSection.classList.remove('hide')\n\n        const portfolioSection = document.querySelector('.App-section-portfolio')\n        portfolioSection.classList.add('hide')\n    }\n\n\n    static handleDocumentKeypress(event) {\n        const {keyCode} = event\n        if (27 === keyCode) App.showMainSection()\n    }\n\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './scripts/reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}